// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  refreshTokens  RefreshToken[]  // ðŸ‘ˆ Inverse of the user <-> token relation

  twoFactorSecret String?   // base32-encoded
  twoFactorEnabled Boolean  @default(false) 
  backupCodes    BackupCode[]
}

model RefreshToken {
  id             String          @id @default(cuid())
  token          String          @unique
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime        @default(now())
  expiresAt      DateTime
  revoked        Boolean         @default(false)

  replacedById   String?         
  replacedBy     RefreshToken?   @relation("Replacement", fields: [replacedById], references: [id])
  replaces       RefreshToken[]  @relation("Replacement") // ðŸ‘ˆ inverse of replacedBy

  @@index([userId])
}

model BackupCode {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  codeHash   String   // bcrypt or similar
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())
}